"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[905],{7522:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(9901);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,w=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(w,a(a({ref:t},s),{},{components:n})):r.createElement(w,a({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2842:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return d}});var r=n(1437),o=n(1268),i=(n(9901),n(7522)),a=["components"],u={},c="Switching Network",l={unversionedId:"guides/switch-network",id:"guides/switch-network",title:"Switching Network",description:"If you do not provide defaultChainId, the network will not auto switch. Usually, this is needed for applications that support multiple networks.",source:"@site/docs/guides/switch-network.md",sourceDirName:"guides",slug:"/guides/switch-network",permalink:"/quiver/guides/switch-network",editUrl:"https://github.com/raid-guild/quiver/edit/main/website/docs/guides/switch-network.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Read and Write Contract",permalink:"/quiver/guides/read-write-cg"},next:{title:"Token Balance",permalink:"/quiver/guides/token-balance"}},s=[],p={toc:s};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"switching-network"},"Switching Network"),(0,i.kt)("p",null,"If you do not provide defaultChainId, the network will not auto switch. Usually, this is needed for applications that support multiple networks."),(0,i.kt)("p",null,"Quiver provides a method that would allow you to switch to a different network. Here's a pseudo code example:"),(0,i.kt)("p",null,"There are some preconditions to using switch network"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"User needs to have metamask installed."),(0,i.kt)("li",{parentName:"ol"},"The network you are switching to should be configured in the list of supported networks")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'const { switchNetwork } = useWallet();\n\nreturn (\n  <>\n    <button onClick={() => switchNetwork("0x1")}>Switch to Mainnet</button>\n    <button onClick={() => switchNetwork("0x4")}>Switch to Rinkeby</button>\n  </>\n);\n')))}d.isMDXComponent=!0}}]);