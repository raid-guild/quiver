"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[927],{3210:function(e){e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":0,"name":"@raidguild/quiver","kind":1,"kindString":"Project","flags":{},"originalName":"","children":[{"id":154,"name":"ContractFactory","kind":256,"kindString":"Interface","flags":{},"children":[{"id":155,"name":"connect","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":156,"name":"connect","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":157,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":158,"name":"signerOrProvider","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Signer"},{"type":"reference","name":"Provider"}]}}],"type":{"type":"reference","id":159,"name":"T"}}]}],"groups":[{"title":"Methods","kind":2048,"children":[155]}],"sources":[{"fileName":"hooks/types.ts","line":6,"character":17}],"typeParameter":[{"id":159,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":160,"name":"ContractInstance"}}],"permalink":"/quiver/api/quiver/interface/ContractFactory","previousId":13,"nextId":160},{"id":160,"name":"ContractInstance","kind":256,"kindString":"Interface","flags":{},"children":[{"id":161,"name":"callStatic","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/types.ts","line":15,"character":2}],"type":{"type":"reference","id":165,"name":"TFunctions"}}],"groups":[{"title":"Properties","kind":1024,"children":[161]}],"sources":[{"fileName":"hooks/types.ts","line":10,"character":17}],"typeParameter":[{"id":165,"name":"TFunctions","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":162,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"hooks/types.ts","line":11,"character":36}],"signatures":[{"id":163,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":164,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}}],"name":"Record"},"default":{"type":"intrinsic","name":"any"}}],"permalink":"/quiver/api/quiver/interface/ContractInstance","previousId":154,"nextId":152},{"id":152,"name":"Awaited","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"hooks/types.ts","line":4,"character":12}],"typeParameter":[{"id":153,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","id":153,"name":"T"},"extendsType":{"type":"reference","typeArguments":[{"type":"inferred","name":"U"}],"name":"PromiseLike"},"trueType":{"type":"reference","id":152,"typeArguments":[{"type":"reference","name":"U"}],"name":"Awaited"},"falseType":{"type":"reference","id":153,"name":"T"}},"permalink":"/quiver/api/quiver#Awaited","previousId":1,"nextId":166},{"id":166,"name":"ContractFunctions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"hooks/types.ts","line":18,"character":12}],"typeParameter":[{"id":167,"name":"TContract","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":160,"name":"ContractInstance"}}],"type":{"type":"conditional","checkType":{"type":"reference","id":167,"name":"TContract"},"extendsType":{"type":"reference","id":160,"typeArguments":[{"type":"inferred","name":"TFunctions"}],"name":"ContractInstance"},"trueType":{"type":"reference","name":"TFunctions"},"falseType":{"type":"intrinsic","name":"never"}},"permalink":"/quiver/api/quiver#ContractFunctions","previousId":152,"nextId":17},{"id":17,"name":"NetworkConfig","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":46,"character":12}],"type":{"type":"reflection","declaration":{"id":18,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":46,"character":28}],"indexSignature":{"id":19,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":20,"name":"chainId","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":21,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":22,"name":"chainId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":48,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":25,"name":"explorer","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":51,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":23,"name":"name","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":49,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":26,"name":"rpc","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":52,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":24,"name":"symbol","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":50,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[22,25,23,26,24]}],"sources":[{"fileName":"WalletContext.tsx","line":47,"character":21}]}}}}},"permalink":"/quiver/api/quiver#NetworkConfig","previousId":166,"nextId":1},{"id":1,"name":"WalletContextType","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":14,"character":12}],"type":{"type":"reflection","declaration":{"id":2,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5,"name":"address","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":17,"character":2}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]}},{"id":4,"name":"chainId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":16,"character":2}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]}},{"id":11,"name":"isConnected","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":21,"character":2}],"type":{"type":"intrinsic","name":"boolean"}},{"id":10,"name":"isConnecting","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":20,"character":2}],"type":{"type":"intrinsic","name":"boolean"}},{"id":12,"name":"isMetamask","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":22,"character":2}],"type":{"type":"intrinsic","name":"boolean"}},{"id":13,"name":"networks","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":23,"character":2}],"type":{"type":"reference","id":17,"name":"NetworkConfig"}},{"id":3,"name":"provider","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":15,"character":2}],"type":{"type":"union","types":[{"type":"reference","name":"providers.Web3Provider"},{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]}},{"id":6,"name":"connectWallet","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":18,"character":2}],"signatures":[{"id":7,"name":"connectWallet","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"id":8,"name":"disconnect","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":19,"character":2}],"signatures":[{"id":9,"name":"disconnect","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]},{"id":14,"name":"switchNetwork","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":24,"character":2}],"signatures":[{"id":15,"name":"switchNetwork","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":16,"name":"chainId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[5,4,11,10,12,13,3]},{"title":"Methods","kind":2048,"children":[6,8,14]}],"sources":[{"fileName":"WalletContext.tsx","line":14,"character":32}]}},"permalink":"/quiver/api/quiver#WalletContextType","previousId":17,"nextId":183},{"id":183,"name":"ERC165_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"An ABI definition for ERC165."},"sources":[{"fileName":"abi.ts","line":20,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/quiver/api/quiver#ERC165_ABI","previousId":3,"nextId":182},{"id":182,"name":"ERC20_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"A minimal ABI definition for an ERC20 token."},"sources":[{"fileName":"abi.ts","line":5,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/quiver/api/quiver#ERC20_ABI","previousId":183,"nextId":187},{"id":187,"name":"ERC721_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"An ABI definition for an ERC721 (non-fungible) token.\\nThis ABI includes common extensions for metadata, and enumerability."},"sources":[{"fileName":"abi.ts","line":68,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/quiver/api/quiver#ERC721_ABI","previousId":182,"nextId":184},{"id":184,"name":"ERC721_BASE_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"A minimal ABI definition for an ERC721 (non-fungible) token."},"sources":[{"fileName":"abi.ts","line":28,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/quiver/api/quiver#ERC721_BASE_ABI","previousId":187,"nextId":186},{"id":186,"name":"ERC721_ENUMERABLE_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{"shortText":"An ABI definition for enumerability of ERC721 tokens."},"sources":[{"fileName":"abi.ts","line":57,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/quiver/api/quiver#ERC721_ENUMERABLE_ABI","previousId":184,"nextId":185},{"id":185,"name":"ERC721_METADATA_ABI","kind":32,"kindString":"Variable","flags":{},"comment":{},"sources":[{"fileName":"abi.ts","line":47,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},"defaultValue":"...","permalink":"/quiver/api/quiver#ERC721_METADATA_ABI","previousId":186,"nextId":27},{"id":27,"name":"WalletProvider","kind":32,"kindString":"Variable","flags":{},"comment":{},"sources":[{"fileName":"WalletContext.tsx","line":63,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":28,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":31,"name":"defaultChainId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"WalletContext.tsx","line":66,"character":2}],"type":{"type":"intrinsic","name":"string"}},{"id":30,"name":"networks","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":65,"character":2}],"type":{"type":"reference","id":17,"name":"NetworkConfig"}},{"id":29,"name":"web3modalOptions","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":64,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ICoreOptions"}],"name":"Partial"}},{"id":32,"name":"handleModalEvents","kind":2048,"kindString":"Method","flags":{"isOptional":true},"sources":[{"fileName":"WalletContext.tsx","line":67,"character":2}],"signatures":[{"id":33,"name":"handleModalEvents","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":34,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"error"},{"type":"literal","value":"accountsChanged"},{"type":"literal","value":"chainChanged"}]}},{"id":35,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":36,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":37,"name":"code","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":69,"character":14}],"type":{"type":"intrinsic","name":"string"}},{"id":38,"name":"message","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"WalletContext.tsx","line":69,"character":28}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[37,38]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[31,30,29]},{"title":"Methods","kind":2048,"children":[32]}],"sources":[{"fileName":"WalletContext.tsx","line":63,"character":38}]}}],"name":"React.FC"},"defaultValue":"...","permalink":"/quiver/api/quiver#WalletProvider","previousId":185},{"id":44,"name":"formatAddress","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"helpers.ts","line":15,"character":13}],"signatures":[{"id":45,"name":"formatAddress","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Given an address, format and truncate the address from middle."},"parameters":[{"id":46,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":47,"name":"ensName","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":48,"name":"chars","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"},"defaultValue":"5"}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/quiver/api/quiver/function/formatAddress","nextId":49},{"id":49,"name":"formatNumber","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"helpers.ts","line":32,"character":13}],"signatures":[{"id":50,"name":"formatNumber","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Converts a number to the localaized string representation."},"parameters":[{"id":51,"name":"number","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/quiver/api/quiver/function/formatNumber","previousId":44,"nextId":52},{"id":52,"name":"formatToUSD","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"helpers.ts","line":43,"character":13}],"signatures":[{"id":53,"name":"formatToUSD","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a localized string representation of a BigNumber multiplied by a currency unit"},"parameters":[{"id":54,"name":"usdPrice","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":55,"name":"number","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"BigNumber"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/quiver/api/quiver/function/formatToUSD","previousId":49,"nextId":56},{"id":56,"name":"formatToken","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"helpers.ts","line":52,"character":13}],"signatures":[{"id":57,"name":"formatToken","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Formats a Bignumber to a string and displays 6 decimal places."},"parameters":[{"id":58,"name":"number","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"BigNumber"}]}},{"id":59,"name":"decimals","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]},"defaultValue":"18"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"permalink":"/quiver/api/quiver/function/formatToken","previousId":52,"nextId":41},{"id":41,"name":"parseTokenURI","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"helpers.ts","line":8,"character":13}],"signatures":[{"id":42,"name":"parseTokenURI","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Converts an ipfs:// link to an HTTP IPFS url https://ipfs.io/ipfs/<hash>"},"parameters":[{"id":43,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/quiver/api/quiver/function/parseTokenURI","previousId":56,"nextId":60},{"id":60,"name":"parseTxErrorMessage","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"helpers.ts","line":72,"character":13}],"signatures":[{"id":61,"name":"parseTxErrorMessage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parses the errors returned from RPC calls and returns the error message string. Useful to display it in toast messages."},"parameters":[{"id":62,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"permalink":"/quiver/api/quiver/function/parseTxErrorMessage","previousId":41,"nextId":125},{"id":125,"name":"useCGPrice","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"hooks/useCGPrice.tsx","line":8,"character":13}],"signatures":[{"id":126,"name":"useCGPrice","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the currency value of a token from coin gecko"},"parameters":[{"id":127,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":128,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":129,"name":"tokenId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useCGPrice.tsx","line":12,"character":2}],"type":{"type":"intrinsic","name":"string"}},{"id":130,"name":"vsCurrency","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useCGPrice.tsx","line":13,"character":2}],"type":{"type":"literal","value":"usd"}}],"groups":[{"title":"Properties","kind":1024,"children":[129,130]}]}}}],"type":{"type":"reflection","declaration":{"id":131,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":133,"name":"loading","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useCGPrice.tsx","line":14,"character":21}],"type":{"type":"intrinsic","name":"boolean"}},{"id":132,"name":"price","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useCGPrice.tsx","line":14,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[133,132]}]}}}],"permalink":"/quiver/api/quiver/function/useCGPrice","previousId":60,"nextId":112},{"id":112,"name":"useContract","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"hooks/useContract.tsx","line":9,"character":13}],"signatures":[{"id":113,"name":"useContract","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an ethers contract instance which can be used with other hooks as well as directly calling functions on the contract."},"parameters":[{"id":114,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":115,"name":"ABI","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ContractInterface"}},{"id":116,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":117,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":118,"name":"staticProvider","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useContract.tsx","line":13,"character":4}],"type":{"type":"reflection","declaration":{"id":119,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":121,"name":"chainId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useContract.tsx","line":16,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":120,"name":"enable","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useContract.tsx","line":15,"character":6}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[121,120]}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[118]}]}}}],"type":{"type":"reflection","declaration":{"id":122,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":123,"name":"contract","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useContract.tsx","line":20,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Contract"}]}},{"id":124,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useContract.tsx","line":21,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[123,124]}]}}}],"permalink":"/quiver/api/quiver/function/useContract","previousId":125,"nextId":134},{"id":134,"name":"useENS","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"hooks/useENS.tsx","line":13,"character":13}],"signatures":[{"id":135,"name":"useENS","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Useful hook to work with ENS names."},"parameters":[{"id":136,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":137,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":139,"name":"address","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useENS.tsx","line":18,"character":2}],"type":{"type":"intrinsic","name":"string"}},{"id":138,"name":"ens","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useENS.tsx","line":17,"character":2}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[139,138]}]}}}],"type":{"type":"reflection","declaration":{"id":140,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":142,"name":"address","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useENS.tsx","line":21,"character":2}],"type":{"type":"intrinsic","name":"string"}},{"id":144,"name":"avatar","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useENS.tsx","line":23,"character":2}],"type":{"type":"intrinsic","name":"string"}},{"id":141,"name":"ens","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useENS.tsx","line":20,"character":2}],"type":{"type":"intrinsic","name":"string"}},{"id":151,"name":"loading","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useENS.tsx","line":26,"character":2}],"type":{"type":"intrinsic","name":"boolean"}},{"id":143,"name":"resolver","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useENS.tsx","line":22,"character":2}],"type":{"type":"reference","name":"Resolver"}},{"id":145,"name":"getAddress","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"hooks/useENS.tsx","line":24,"character":2}],"signatures":[{"id":146,"name":"getAddress","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":147,"name":"ens","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}],"name":"Promise"}}]},{"id":148,"name":"getEns","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"hooks/useENS.tsx","line":25,"character":2}],"signatures":[{"id":149,"name":"getEns","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":150,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}],"name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[142,144,141,151,143]},{"title":"Methods","kind":2048,"children":[145,148]}]}}}],"permalink":"/quiver/api/quiver/function/useENS","previousId":112,"nextId":63},{"id":63,"name":"useReadContract","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"hooks/useReadContract.tsx","line":9,"character":13}],"signatures":[{"id":64,"name":"useReadContract","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Read from contract"},"typeParameter":[{"id":65,"name":"TContract","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":160,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","id":65,"name":"TContract"}],"name":"ContractInstance"},"default":{"type":"intrinsic","name":"any"}},{"id":66,"name":"TFunctionName","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":67,"name":"contract","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":65,"name":"TContract"},{"type":"reference","name":"Contract"}]}},{"id":68,"name":"functionName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":66,"name":"TFunctionName"}},{"id":69,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":66,"name":"TFunctionName"},"objectType":{"type":"reference","id":166,"typeArguments":[{"type":"reference","id":65,"name":"TContract"}],"name":"ContractFunctions"}}],"name":"Parameters"}},{"id":70,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":71,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":72,"name":"autoUpdateInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useReadContract.tsx","line":17,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[72]}]}}}],"type":{"type":"reflection","declaration":{"id":73,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":75,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useReadContract.tsx","line":21,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error"}]}},{"id":74,"name":"loading","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useReadContract.tsx","line":20,"character":2}],"type":{"type":"intrinsic","name":"boolean"}},{"id":76,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useReadContract.tsx","line":22,"character":2}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","id":152,"typeArguments":[{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":66,"name":"TFunctionName"},"objectType":{"type":"reference","id":166,"typeArguments":[{"type":"reference","id":65,"name":"TContract"}],"name":"ContractFunctions"}}],"name":"ReturnType"}],"name":"Awaited"}]}},{"id":77,"name":"mutate","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"hooks/useReadContract.tsx","line":25,"character":2}],"signatures":[{"id":78,"name":"mutate","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":79,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":81,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useReadContract.tsx","line":28,"character":8}],"type":{"type":"reference","name":"Error"}},{"id":80,"name":"loading","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useReadContract.tsx","line":27,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":82,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useReadContract.tsx","line":29,"character":8}],"type":{"type":"intrinsic","name":"any"}}],"groups":[{"title":"Properties","kind":1024,"children":[81,80,82]}]}}]}],"name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[75,74,76]},{"title":"Methods","kind":2048,"children":[77]}]}}}],"permalink":"/quiver/api/quiver/function/useReadContract","previousId":134,"nextId":107},{"id":107,"name":"useTokenBalance","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"hooks/useTokenBalance.tsx","line":17,"character":16}],"signatures":[{"id":108,"name":"useTokenBalance","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the current token balance for a specified address, or the currently-connected wallet.\\nThis should be used on ERC20 or ERC721 contracts that implement the `balanceOf(address)` function.\\nThis hook will suspend while it loads."},"parameters":[{"id":109,"name":"contract","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The smart contract for the token. Should be an ERC20 or ERC721 contract."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Contract"}]}},{"id":110,"name":"address","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The address. Defaults to the address of the connected wallet."},"type":{"type":"intrinsic","name":"string"}},{"id":111,"name":"autoUpdateInterval","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The interval in milliseconds to automatically update the balance."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"BigNumber"}}],"permalink":"/quiver/api/quiver/function/useTokenBalance","previousId":63,"nextId":168},{"id":168,"name":"useTypedContract","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"hooks/useTypedContract.tsx","line":9,"character":13}],"signatures":[{"id":169,"name":"useTypedContract","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an ethers contract instance which can be used with other hooks as well as directly calling functions on the contract."},"typeParameter":[{"id":170,"name":"TContract","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":160,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","id":170,"name":"TContract"}],"name":"ContractInstance"},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":171,"name":"address","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":172,"name":"typechainFactory","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":154,"typeArguments":[{"type":"reference","id":170,"name":"TContract"}],"name":"ContractFactory"}},{"id":173,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":174,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":175,"name":"staticProvider","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useTypedContract.tsx","line":13,"character":4}],"type":{"type":"reflection","declaration":{"id":176,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":178,"name":"chainId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useTypedContract.tsx","line":16,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":177,"name":"enable","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useTypedContract.tsx","line":15,"character":6}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[178,177]}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[175]}]}}}],"type":{"type":"reflection","declaration":{"id":179,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":180,"name":"contract","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useTypedContract.tsx","line":20,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":170,"name":"TContract"}]}},{"id":181,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useTypedContract.tsx","line":21,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[180,181]}]}}}],"permalink":"/quiver/api/quiver/function/useTypedContract","previousId":107,"nextId":39},{"id":39,"name":"useWallet","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"WalletContext.tsx","line":239,"character":13}],"signatures":[{"id":40,"name":"useWallet","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the wallet context from the wallet provider"},"type":{"type":"reference","id":1,"name":"WalletContextType"}}],"permalink":"/quiver/api/quiver/function/useWallet","previousId":168,"nextId":83},{"id":83,"name":"useWriteContract","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"hooks/useWriteContract.tsx","line":15,"character":13}],"signatures":[{"id":84,"name":"useWriteContract","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Write to a contract"},"typeParameter":[{"id":85,"name":"TContract","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":160,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","id":85,"name":"TContract"}],"name":"ContractInstance"},"default":{"type":"intrinsic","name":"any"}},{"id":86,"name":"TFunctionName","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"},"default":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":87,"name":"contract","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Contract"},{"type":"reference","id":85,"name":"TContract"}]}},{"id":88,"name":"functionName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":86,"name":"TFunctionName"}},{"id":89,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":90,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":91,"name":"confirmations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useWriteContract.tsx","line":22,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":98,"name":"onConfirmation","kind":2048,"kindString":"Method","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useWriteContract.tsx","line":25,"character":4}],"signatures":[{"id":99,"name":"onConfirmation","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":100,"name":"receipt","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ContractReceipt"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":92,"name":"onError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useWriteContract.tsx","line":23,"character":4}],"signatures":[{"id":93,"name":"onError","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":94,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":95,"name":"onResponse","kind":2048,"kindString":"Method","flags":{"isOptional":true},"sources":[{"fileName":"hooks/useWriteContract.tsx","line":24,"character":4}],"signatures":[{"id":96,"name":"onResponse","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":97,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ContractTransaction"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[91]},{"title":"Methods","kind":2048,"children":[98,92,95]}]}}}],"type":{"type":"reflection","declaration":{"id":101,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":105,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useWriteContract.tsx","line":31,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error"}]}},{"id":106,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"hooks/useWriteContract.tsx","line":32,"character":2}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"ContractTransaction"}]}},{"id":102,"name":"mutate","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"hooks/useWriteContract.tsx","line":28,"character":2}],"signatures":[{"id":103,"name":"mutate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":104,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":86,"name":"TFunctionName"},"objectType":{"type":"reference","id":166,"typeArguments":[{"type":"reference","id":85,"name":"TContract"}],"name":"ContractFunctions"}}],"name":"Parameters"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}],"groups":[{"title":"Properties","kind":1024,"children":[105,106]},{"title":"Methods","kind":2048,"children":[102]}]}}}],"permalink":"/quiver/api/quiver/function/useWriteContract","previousId":39,"nextId":154}],"groups":[{"title":"Functions","kind":64,"children":[44,49,52,56,41,60,125,112,134,63,107,168,39,83],"categories":[{"title":"Helpers","children":[44,49,52,56,41,60]},{"title":"Hooks","children":[125,112,134,63,107,168,39,83]}]},{"title":"Interfaces","kind":256,"children":[154,160]},{"title":"Type aliases","kind":4194304,"children":[152,166,17,1]},{"title":"Variables","kind":32,"children":[183,182,187,184,186,185,27],"categories":[{"title":"Common ABIs","children":[183,182,187,184,186,185]},{"title":"Providers","children":[27]}]}],"sources":[{"fileName":"index.ts","line":1,"character":0}],"permalink":"/quiver/api/quiver"},"urlSlug":"quiver"}],"packageName":"@raidguild/quiver","packageVersion":"0.9.0"}]')}}]);